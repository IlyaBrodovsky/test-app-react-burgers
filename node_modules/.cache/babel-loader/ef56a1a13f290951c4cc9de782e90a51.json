{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react_begginer /react-001-starter-files-2021/src/components/App.js\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport MenuAdmin from \"./MenuAdmin\";\nimport Burger from \"./Burger\";\nimport sampleBurgers from \"../sample-burgers\";\nimport base from \"../base\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      burgers: {},\n      order: {}\n    };\n\n    this.addBurger = burger => {\n      console.log(\"addBurger \", burger); // 1. Делаем копию объекта state\n\n      const burgers = { ...this.state.burgers\n      }; // 2. Добавить новый бургер в объект burgers\n\n      burgers[`${Date.now()}`] = burger; // 3. Записать наш новый объект burgers в объект setState\n\n      this.setState({\n        burgers\n      });\n    };\n\n    this.updatedBurger = (key, updatedBurger) => {\n      // 1. Делаем копию объекта state\n      const burgers = { ...this.state.burgers\n      }; // 2. Обновляем нужный бургер\n\n      burgers[key] = updatedBurger; // 3. Записать наш новый объект burgers в объект state\n\n      this.setState({\n        burgers\n      });\n    };\n\n    this.loadSampleBurgers = () => {\n      this.setState({\n        burgers: sampleBurgers\n      });\n    };\n\n    this.addToOrder = key => {\n      // 1. делаем копию объекта state\n      const order = { ...this.state.order\n      }; // 2. Добавить ключ к заказу со значением 1 либо обновить текущее значение\n\n      order[key] = order[key] + 1 || 1; // 3 Записать обновленное значение в объект state\n\n      this.setState({\n        order\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props.match;\n    const localStorageRef = localStorage.getItem(params.restaurantid);\n\n    if (localStorageRef) {\n      this.setState({\n        order: JSON.parse(localStorageRef)\n      });\n    }\n\n    this.ref = base.syncState(`${params.restaurantid}/burgers`, {\n      context: this,\n      state: \"burgers\"\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  componentDidUpdate() {\n    const {\n      params\n    } = this.props.match;\n    localStorage.setItem(params.restaurantid, JSON.stringify(this.state.order));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"burger-paradise\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          title: \"Very hot burger\",\n          amount: 10,\n          hot: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"burgers\",\n          children: Object.keys(this.state.burgers).map(key => {\n            return /*#__PURE__*/_jsxDEV(Burger, {\n              index: key,\n              addToOrder: this.addToOrder,\n              details: this.state.burgers[key]\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Order, {\n        burgers: this.state.burgers,\n        order: this.state.order\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuAdmin, {\n        addBurger: this.addBurger,\n        loadSampleBurgers: this.loadSampleBurgers,\n        burgers: this.state.burgers,\n        updatedBurger: this.updatedBurger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react_begginer /react-001-starter-files-2021/src/components/App.js"],"names":["React","Header","Order","MenuAdmin","Burger","sampleBurgers","base","App","Component","state","burgers","order","addBurger","burger","console","log","Date","now","setState","updatedBurger","key","loadSampleBurgers","addToOrder","componentDidMount","params","props","match","localStorageRef","localStorage","getItem","restaurantid","JSON","parse","ref","syncState","context","componentWillUnmount","removeBinding","componentDidUpdate","setItem","stringify","render","Object","keys","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,KAAK,EAAE;AAFD,KADwB;;AAAA,SA8BhCC,SA9BgC,GA8BnBC,MAAD,IAAY;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,MAA1B,EADsB,CAEtB;;AACA,YAAMH,OAAO,GAAG,EAAE,GAAG,KAAKD,KAAL,CAAWC;AAAhB,OAAhB,CAHsB,CAItB;;AACAA,MAAAA,OAAO,CAAE,GAAEM,IAAI,CAACC,GAAL,EAAW,EAAf,CAAP,GAA2BJ,MAA3B,CALsB,CAMtB;;AACA,WAAKK,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AACD,KAtC+B;;AAAA,SAwChCS,aAxCgC,GAwChB,CAACC,GAAD,EAAMD,aAAN,KAAwB;AACtC;AACA,YAAMT,OAAO,GAAG,EAAE,GAAG,KAAKD,KAAL,CAAWC;AAAhB,OAAhB,CAFsC,CAGtC;;AACAA,MAAAA,OAAO,CAACU,GAAD,CAAP,GAAeD,aAAf,CAJsC,CAKtC;;AACA,WAAKD,QAAL,CAAc;AAAER,QAAAA;AAAF,OAAd;AAED,KAhD+B;;AAAA,SAkDhCW,iBAlDgC,GAkDZ,MAAM;AACxB,WAAKH,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAEL;AAAX,OAAd;AACD,KApD+B;;AAAA,SAqDhCiB,UArDgC,GAqDlBF,GAAD,IAAS;AACpB;AACA,YAAMT,KAAK,GAAG,EAAE,GAAG,KAAKF,KAAL,CAAWE;AAAhB,OAAd,CAFoB,CAGpB;;AACAA,MAAAA,KAAK,CAACS,GAAD,CAAL,GAAaT,KAAK,CAACS,GAAD,CAAL,GAAa,CAAb,IAAkB,CAA/B,CAJoB,CAKpB;;AACA,WAAKF,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACD,KA5D+B;AAAA;;AAMhCY,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKC,KAAL,CAAWC,KAA9B;AAEA,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqBL,MAAM,CAACM,YAA5B,CAAxB;;AAEA,QAAIH,eAAJ,EAAqB;AACnB,WAAKT,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEoB,IAAI,CAACC,KAAL,CAAWL,eAAX;AAAT,OAAd;AACD;;AAED,SAAKM,GAAL,GAAW3B,IAAI,CAAC4B,SAAL,CAAgB,GAAEV,MAAM,CAACM,YAAa,UAAtC,EAAiD;AAC1DK,MAAAA,OAAO,EAAE,IADiD;AAE1D1B,MAAAA,KAAK,EAAE;AAFmD,KAAjD,CAAX;AAID;;AAED2B,EAAAA,oBAAoB,GAAG;AACrB9B,IAAAA,IAAI,CAAC+B,aAAL,CAAmB,KAAKJ,GAAxB;AACD;;AAEDK,EAAAA,kBAAkB,GAAG;AACnB,UAAM;AAAEd,MAAAA;AAAF,QAAa,KAAKC,KAAL,CAAWC,KAA9B;AACAE,IAAAA,YAAY,CAACW,OAAb,CAAqBf,MAAM,CAACM,YAA5B,EAA0CC,IAAI,CAACS,SAAL,CAAe,KAAK/B,KAAL,CAAWE,KAA1B,CAA1C;AACD;;AAiCD8B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,iBAAd;AAAgC,UAAA,MAAM,EAAE,EAAxC;AAA4C,UAAA,GAAG,EAAE;AAAjD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA,oBACGC,MAAM,CAACC,IAAP,CAAY,KAAKlC,KAAL,CAAWC,OAAvB,EAAgCkC,GAAhC,CAAqCxB,GAAD,IAAS;AAC5C,gCACE,QAAC,MAAD;AAEE,cAAA,KAAK,EAAEA,GAFT;AAGE,cAAA,UAAU,EAAE,KAAKE,UAHnB;AAIE,cAAA,OAAO,EAAE,KAAKb,KAAL,CAAWC,OAAX,CAAmBU,GAAnB;AAJX,eACOA,GADP;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD,WATA;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWC,OAA3B;AAAoC,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE;AAAtD;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,SAAD;AACE,QAAA,SAAS,EAAE,KAAKC,SADlB;AAEE,QAAA,iBAAiB,EAAE,KAAKS,iBAF1B;AAGE,QAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWC,OAHtB;AAIE,QAAA,aAAa,EAAE,KAAKS;AAJtB;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAxF+B;;AA2FlC,eAAeZ,GAAf","sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport MenuAdmin from \"./MenuAdmin\";\nimport Burger from \"./Burger\";\nimport sampleBurgers from \"../sample-burgers\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    burgers: {},\n    order: {},\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    const localStorageRef = localStorage.getItem(params.restaurantid);\n\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.restaurantid}/burgers`, {\n      context: this,\n      state: \"burgers\",\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  componentDidUpdate() {\n    const { params } = this.props.match;\n    localStorage.setItem(params.restaurantid, JSON.stringify(this.state.order));\n  }\n\n  addBurger = (burger) => {\n    console.log(\"addBurger \", burger);\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Добавить новый бургер в объект burgers\n    burgers[`${Date.now()}`] = burger;\n    // 3. Записать наш новый объект burgers в объект setState\n    this.setState({ burgers });\n  };\n\n  updatedBurger = (key, updatedBurger) => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Обновляем нужный бургер\n    burgers[key] = updatedBurger;\n    // 3. Записать наш новый объект burgers в объект state\n    this.setState({ burgers })\n\n  }\n\n  loadSampleBurgers = () => {\n    this.setState({ burgers: sampleBurgers });\n  };\n  addToOrder = (key) => {\n    // 1. делаем копию объекта state\n    const order = { ...this.state.order };\n    // 2. Добавить ключ к заказу со значением 1 либо обновить текущее значение\n    order[key] = order[key] + 1 || 1;\n    // 3 Записать обновленное значение в объект state\n    this.setState({ order });\n  };\n  render() {\n    return (\n      <div className=\"burger-paradise\">\n        <div className=\"menu\">\n          <Header title=\"Very hot burger\" amount={10} hot={true} />\n          <ul className=\"burgers\">\n            {Object.keys(this.state.burgers).map((key) => {\n              return (\n                <Burger\n                  key={key}\n                  index={key}\n                  addToOrder={this.addToOrder}\n                  details={this.state.burgers[key]}\n                />\n              );\n            })}\n          </ul>\n        </div>\n        <Order burgers={this.state.burgers} order={this.state.order} />\n        <MenuAdmin\n          addBurger={this.addBurger}\n          loadSampleBurgers={this.loadSampleBurgers}\n          burgers={this.state.burgers}\n          updatedBurger={this.updatedBurger}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}