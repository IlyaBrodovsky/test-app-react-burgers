{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react_begginer /react-001-starter-files-2021/src/components/Order.js\";\nimport React from \"react\";\nimport Shipment from \"./Shipment\";\nimport { TransitionGroup, CSSTransition as Transition } from \"react-transition-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Order extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderOrder = key => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      const isAvailable = burger && burger.status === \"available\";\n      const transitionOptions = {\n        classNames: \"count\",\n        key,\n        timeout: {\n          enter: 500,\n          exit: 500\n        }\n      };\n\n      if (!isAvailable) {\n        return /*#__PURE__*/_jsxDEV(Transition, { ...transitionOptions,\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"unavailable\",\n            children: [\"\\u0418\\u0437\\u0432\\u0438\\u043D\\u0438\\u0442\\u0435, \", burger ? burger.name : \"бургер\", \" \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u043E \\u043D\\u0435 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u0435\\u043D\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Transition, {\n        classNames: \"order\",\n        timeout: {\n          enter: 500,\n          exit: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(TransitionGroup, {\n              component: \"span\",\n              className: \"count\",\n              children: /*#__PURE__*/_jsxDEV(Transition, {\n                classNames: \"count\",\n                timeout: {\n                  enter: 500,\n                  exit: 500\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: count\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 17\n                }, this)\n              }, count, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this), \"\\u0448\\u0442. \", burger.name, /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \", count * burger.price, \" \\u20BD\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                this.props.deleteFromOrder(key);\n              },\n              className: \"cancellItem\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n      const isAvailable = burger && burger.status === \"available\";\n      if (!burger) return null;\n\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n\n      return prevTotal;\n    }, 0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u0430\\u0448 \\u0437\\u0430\\u043A\\u0430\\u0437\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n        component: \"ul\",\n        className: \"order\",\n        children: orderIds.map(this.renderOrder)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), total > 0 ? /*#__PURE__*/_jsxDEV(Shipment, {\n        total: total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nothingSelected\",\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u0431\\u043B\\u044E\\u0434\\u043E \\u0438 \\u0434\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043A \\u0437\\u0430\\u043A\\u0430\\u0437\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Order;","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react_begginer /react-001-starter-files-2021/src/components/Order.js"],"names":["React","Shipment","TransitionGroup","CSSTransition","Transition","Order","Component","renderOrder","key","burger","props","burgers","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","name","price","deleteFromOrder","render","orderIds","Object","keys","total","reduce","prevTotal","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Shipment from \"./Shipment\";\nimport { TransitionGroup, CSSTransition as Transition } from \"react-transition-group\";\nclass Order extends React.Component {\n  renderOrder = (key) => {\n    const burger = this.props.burgers[key];\n    const count = this.props.order[key];\n\n    const isAvailable = burger && burger.status === \"available\";\n    const transitionOptions = {\n      classNames: \"count\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    }\n    if (!isAvailable) {\n      return (\n        <Transition\n          {...transitionOptions}\n        >\n          <li className=\"unavailable\" key={key}>\n            Извините, {burger ? burger.name : \"бургер\"} временно не доступен\n          </li>\n        </Transition>\n      );\n    }\n\n    return (\n      <Transition\n        classNames=\"order\"\n        key={key}\n        timeout={{ enter: 500, exit: 500 }}\n      >\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <Transition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </Transition>\n            </TransitionGroup>\n            шт. {burger.name}\n            <span> {count * burger.price} &#8381;</span>\n            <button\n              onClick={() => {\n                this.props.deleteFromOrder(key);\n              }}\n              className=\"cancellItem\"\n            >\n              &times;\n            </button>\n          </span>\n        </li>\n      </Transition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const burger = this.props.burgers[key];\n      const count = this.props.order[key];\n\n      const isAvailable = burger && burger.status === \"available\";\n\n      if (!burger) return null;\n\n      if (isAvailable) {\n        return prevTotal + burger.price * count;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Ваш заказ</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n\n        {total > 0 ? (\n          <Shipment total={total} />\n        ) : (\n          <div className=\"nothingSelected\">\n            Выберете блюдо и добавьте к заказу\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}