{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react_begginer /react-001-starter-files-2021/test-app-react-burgers/src/components/MenuAdmin.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddBurgerForm from \"./AddBurgerForm\";\nimport EditBurgerForm from \"./EditBurgerForm\";\nimport firebase from \"firebase/app\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MenuAdmin extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      photo: \"\",\n      user: \"\"\n    };\n\n    this.authHandler = async authData => {\n      const {\n        email,\n        photoURL\n      } = authData.user;\n      this.setState({\n        user: email,\n        photo: photoURL\n      });\n    };\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({\n          user\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      user,\n      photo\n    } = this.state;\n    const avatar = photo ? photo : \"/images/avatar.png\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-admin\",\n      children: [user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatar,\n            alt: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonLogout\",\n          onClick: () => {\n            this.props.handleLogout();\n          },\n          children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043C\\u0435\\u043D\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), Object.keys(this.props.burgers).map(key => {\n        return /*#__PURE__*/_jsxDEV(EditBurgerForm, {\n          index: key,\n          burger: this.props.burgers[key],\n          updatedBurger: this.props.updatedBurger,\n          deleteBurger: this.props.deleteBurger\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(AddBurgerForm, {\n        addBurger: this.props.addBurger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.props.loadSampleBurgers,\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0431\\u0443\\u0440\\u0433\\u0435\\u0440\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMenuAdmin.propTypes = {\n  burgers: PropTypes.object,\n  deleteBurger: PropTypes.func,\n  updatedBurger: PropTypes.func,\n  addBurger: PropTypes.func,\n  loadSampleBurgers: PropTypes.func\n};\nexport default MenuAdmin;","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react_begginer /react-001-starter-files-2021/test-app-react-burgers/src/components/MenuAdmin.js"],"names":["React","PropTypes","AddBurgerForm","EditBurgerForm","firebase","MenuAdmin","Component","state","photo","user","authHandler","authData","email","photoURL","setState","componentDidMount","auth","onAuthStateChanged","render","avatar","props","handleLogout","Object","keys","burgers","map","key","updatedBurger","deleteBurger","addBurger","loadSampleBurgers","propTypes","object","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddBurgerForm from \"./AddBurgerForm\";\nimport EditBurgerForm from \"./EditBurgerForm\";\nimport firebase from \"firebase/app\";\n\nclass MenuAdmin extends React.Component {\n  state = {\n    photo: \"\",\n    user: \"\",\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async (authData) => {\n    const { email, photoURL } = authData.user;\n    this.setState({\n      user: email,\n      photo: photoURL,\n    });\n  };\n\n  static propTypes = {\n    burgers: PropTypes.object,\n    deleteBurger: PropTypes.func,\n    updatedBurger: PropTypes.func,\n    addBurger: PropTypes.func,\n    loadSampleBurgers: PropTypes.func,\n  };\n\n  render() {\n    const { user, photo } = this.state;\n    const avatar = photo ? photo : \"/images/avatar.png\";\n    return (\n      <div className=\"menu-admin\">\n        {user ? (\n          <div className=\"login-header\">\n            <div className=\"avatar\">\n              <img src={avatar} alt={user} />\n            </div>\n            <button\n              className=\"buttonLogout\"\n              onClick={() => {\n                this.props.handleLogout();\n              }}\n            >\n              Выйти\n            </button>\n          </div>\n        ) : null}\n        <h2>Управление меню</h2>\n        {Object.keys(this.props.burgers).map((key) => {\n          return (\n            <EditBurgerForm\n              key={key}\n              index={key}\n              burger={this.props.burgers[key]}\n              updatedBurger={this.props.updatedBurger}\n              deleteBurger={this.props.deleteBurger}\n            />\n          );\n        })}\n        <AddBurgerForm addBurger={this.props.addBurger} />\n        <button onClick={this.props.loadSampleBurgers}>\n          Загрузить бургеры\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default MenuAdmin;\n"]},"metadata":{},"sourceType":"module"}