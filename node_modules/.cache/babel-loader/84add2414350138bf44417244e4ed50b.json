{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react_begginer /react-001-starter-files-2021/test-app-react-burgers/src/components/App.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport MenuAdmin from \"./MenuAdmin\";\nimport Burger from \"./Burger\";\nimport sampleBurgers from \"../sample-burgers\";\nimport base from \"../base\";\nimport firebase from \"firebase/app\";\nimport SignIn from \"./Auth/SignIn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      burgers: {},\n      order: {}\n    };\n\n    this.addBurger = burger => {\n      console.log(\"addBurger \", burger); // 1. Делаем копию объекта state\n\n      const burgers = { ...this.state.burgers\n      }; // 2. Добавить новый бургер в объект burgers\n\n      burgers[`${Date.now()}`] = burger; // 3. Записать наш новый объект burgers в объект setState\n\n      this.setState({\n        burgers\n      });\n    };\n\n    this.updatedBurger = (key, updatedBurger) => {\n      // 1. Делаем копию объекта state\n      const burgers = { ...this.state.burgers\n      }; // 2. Обновляем нужный бургер\n\n      burgers[key] = updatedBurger; // 3. Записать наш новый объект burgers в объект state\n\n      this.setState({\n        burgers\n      });\n    };\n\n    this.deleteBurger = key => {\n      // 1. Делаем копию объекта state\n      const burgers = { ...this.state.burgers\n      }; // 2. Добавить удаляем бургер\n\n      burgers[key] = null; // 3. Записать наш новый объект burgers в объект state\n\n      this.setState({\n        burgers\n      });\n    };\n\n    this.deleteFromOrder = key => {\n      // 1. Делаем копию объекта state\n      const order = { ...this.state.order\n      }; // 2. удаляем бургер\n\n      delete order[key]; // 3. Записать наш новый объект order в объект state\n\n      this.setState({\n        order\n      });\n    };\n\n    this.loadSampleBurgers = () => {\n      this.setState({\n        burgers: sampleBurgers\n      });\n    };\n\n    this.addToOrder = key => {\n      // 1. делаем копию объекта state\n      const order = { ...this.state.order\n      }; // 2. Добавить ключ к заказу со значением 1 либо обновить текущее значение\n\n      order[key] = order[key] + 1 || 1; // 3 Записать обновленное значение в объект state\n\n      this.setState({\n        order\n      });\n    };\n\n    this.handleLogout = async () => {\n      await firebase.auth().signOut();\n      window.location.reload();\n    };\n  }\n\n  componentDidMount() {\n    const {\n      params\n    } = this.props.match;\n    const localStorageRef = localStorage.getItem(params.restaurantid);\n\n    if (localStorageRef) {\n      this.setState({\n        order: JSON.parse(localStorageRef)\n      });\n    }\n\n    this.ref = base.syncState(`${params.restaurantid}/burgers`, {\n      context: this,\n      state: \"burgers\"\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  componentDidUpdate() {\n    const {\n      params\n    } = this.props.match;\n    localStorage.setItem(params.restaurantid, JSON.stringify(this.state.order));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(SignIn, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"burger-paradise\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            title: \"Very hot burger\",\n            amount: 10,\n            hot: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"burgers\",\n            children: Object.keys(this.state.burgers).map(key => {\n              return /*#__PURE__*/_jsxDEV(Burger, {\n                index: key,\n                addToOrder: this.addToOrder,\n                details: this.state.burgers[key]\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Order, {\n          deleteFromOrder: this.deleteFromOrder,\n          burgers: this.state.burgers,\n          order: this.state.order\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuAdmin, {\n          addBurger: this.addBurger,\n          loadSampleBurgers: this.loadSampleBurgers,\n          burgers: this.state.burgers,\n          updatedBurger: this.updatedBurger,\n          deleteBurger: this.deleteBurger,\n          handleLogout: this.handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nApp.propTypes = {\n  match: PropTypes.object\n};\nexport default App;","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react_begginer /react-001-starter-files-2021/test-app-react-burgers/src/components/App.js"],"names":["React","PropTypes","Header","Order","MenuAdmin","Burger","sampleBurgers","base","firebase","SignIn","App","Component","state","burgers","order","addBurger","burger","console","log","Date","now","setState","updatedBurger","key","deleteBurger","deleteFromOrder","loadSampleBurgers","addToOrder","handleLogout","auth","signOut","window","location","reload","componentDidMount","params","props","match","localStorageRef","localStorage","getItem","restaurantid","JSON","parse","ref","syncState","context","componentWillUnmount","removeBinding","componentDidUpdate","setItem","stringify","render","Object","keys","map","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport MenuAdmin from \"./MenuAdmin\";\nimport Burger from \"./Burger\";\nimport sampleBurgers from \"../sample-burgers\";\nimport base from \"../base\";\nimport firebase from \"firebase/app\"\nimport SignIn from \"./Auth/SignIn\";\n\nclass App extends React.Component {\n  static propTypes = {\n    match: PropTypes.object,\n  };\n\n  state = {\n    burgers: {},\n    order: {},\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n\n    const localStorageRef = localStorage.getItem(params.restaurantid);\n\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.restaurantid}/burgers`, {\n      context: this,\n      state: \"burgers\",\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  componentDidUpdate() {\n    const { params } = this.props.match;\n    localStorage.setItem(params.restaurantid, JSON.stringify(this.state.order));\n  }\n\n  addBurger = (burger) => {\n    console.log(\"addBurger \", burger);\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Добавить новый бургер в объект burgers\n    burgers[`${Date.now()}`] = burger;\n    // 3. Записать наш новый объект burgers в объект setState\n    this.setState({ burgers });\n  };\n\n  updatedBurger = (key, updatedBurger) => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Обновляем нужный бургер\n    burgers[key] = updatedBurger;\n    // 3. Записать наш новый объект burgers в объект state\n    this.setState({ burgers });\n  };\n\n  deleteBurger = (key) => {\n    // 1. Делаем копию объекта state\n    const burgers = { ...this.state.burgers };\n    // 2. Добавить удаляем бургер\n    burgers[key] = null;\n    // 3. Записать наш новый объект burgers в объект state\n    this.setState({ burgers });\n  };\n  deleteFromOrder = (key) => {\n    // 1. Делаем копию объекта state\n    const order = { ...this.state.order };\n    // 2. удаляем бургер\n    delete order[key];\n    // 3. Записать наш новый объект order в объект state\n    this.setState({ order });\n  };\n  loadSampleBurgers = () => {\n    this.setState({ burgers: sampleBurgers });\n  };\n  addToOrder = (key) => {\n    // 1. делаем копию объекта state\n    const order = { ...this.state.order };\n    // 2. Добавить ключ к заказу со значением 1 либо обновить текущее значение\n    order[key] = order[key] + 1 || 1;\n    // 3 Записать обновленное значение в объект state\n    this.setState({ order });\n  };\n\n  handleLogout = async () => {\n    await firebase.auth().signOut();\n    window.location.reload();\n  }\n\n  render() {\n    return (\n      <SignIn>\n        <div className=\"burger-paradise\">\n          <div className=\"menu\">\n            <Header title=\"Very hot burger\" amount={10} hot={true} />\n            <ul className=\"burgers\">\n              {Object.keys(this.state.burgers).map((key) => {\n                return (\n                  <Burger\n                    key={key}\n                    index={key}\n                    addToOrder={this.addToOrder}\n                    details={this.state.burgers[key]}\n                  />\n                );\n              })}\n            </ul>\n          </div>\n          <Order\n            deleteFromOrder={this.deleteFromOrder}\n            burgers={this.state.burgers}\n            order={this.state.order}\n          />\n          <MenuAdmin\n            addBurger={this.addBurger}\n            loadSampleBurgers={this.loadSampleBurgers}\n            burgers={this.state.burgers}\n            updatedBurger={this.updatedBurger}\n            deleteBurger={this.deleteBurger}\n            handleLogout={this.handleLogout}\n          />\n        </div>\n      </SignIn>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}