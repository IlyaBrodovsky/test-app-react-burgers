{"ast":null,"code":"var _jsxFileName = \"/Users/ilyabrodovsky/Documents/react_begginer /react-001-starter-files-2021/src/components/EditBurgerForm.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EditBurgerForm extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleChange = event => {\n      console.log(event.currentTarget);\n      const updatedBurger = { ...this.props.burger,\n        [event.currentTarget.name]: event.currentTarget.value\n      };\n      this.props.updatedBurger(this.props.index, updatedBurger);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"burger-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        onChange: this.handleChange,\n        type: \"text\",\n        value: this.props.burger.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"price\",\n        onChange: this.handleChange,\n        type: \"text\",\n        value: this.props.burger.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"status\",\n        onChange: this.handleChange,\n        name: \"status\",\n        value: this.props.burger.status,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"available\",\n          children: \"\\u0414\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"unavailable\",\n          children: \"\\u041D\\u0435 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"desc\",\n        onChange: this.handleChange,\n        type: \"text\",\n        value: this.props.burger.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"image\",\n        onChange: this.handleChange,\n        type: \"text\",\n        value: this.props.burger.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.props.deleteBurger(this.props.index);\n        },\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0438\\u0437 \\u043C\\u0435\\u043D\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nEditBurgerForm.propTypes = {\n  burger: PropTypes.shape({\n    image: PropTypes.string,\n    name: PropTypes.string,\n    price: PropTypes.number,\n    desc: PropTypes.string,\n    status: PropTypes.string\n  }),\n  index: PropTypes.string,\n  updatedBurger: PropTypes.func,\n  deleteBurger: PropTypes.func\n};\nexport default EditBurgerForm;","map":{"version":3,"sources":["/Users/ilyabrodovsky/Documents/react_begginer /react-001-starter-files-2021/src/components/EditBurgerForm.js"],"names":["React","PropTypes","EditBurgerForm","Component","handleChange","event","console","log","currentTarget","updatedBurger","props","burger","name","value","index","render","price","status","desc","image","deleteBurger","propTypes","shape","string","number","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nclass EditBurgerForm extends React.Component {\n  static propTypes = {\n    burger: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.number,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n    }),\n    index: PropTypes.string,\n    updatedBurger: PropTypes.func,\n    deleteBurger: PropTypes.func\n  };\n\n  handleChange = (event) => {\n    console.log(event.currentTarget);\n\n    const updatedBurger = {\n      ...this.props.burger,\n      [event.currentTarget.name]: event.currentTarget.value,\n    };\n    this.props.updatedBurger(this.props.index, updatedBurger);\n  };\n\n  render() {\n    return (\n      <div className=\"burger-edit\">\n        <input\n          name=\"name\"\n          onChange={this.handleChange}\n          type=\"text\"\n          value={this.props.burger.name}\n        />\n        <input\n          name=\"price\"\n          onChange={this.handleChange}\n          type=\"text\"\n          value={this.props.burger.price}\n        />\n        <select\n          className=\"status\"\n          onChange={this.handleChange}\n          name=\"status\"\n          value={this.props.burger.status}\n        >\n          <option value=\"available\">Доступно</option>\n          <option value=\"unavailable\">Не доступно</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          type=\"text\"\n          value={this.props.burger.desc}\n        />\n        <input\n          name=\"image\"\n          onChange={this.handleChange}\n          type=\"text\"\n          value={this.props.burger.image}\n        />\n        <button\n          onClick={() => {\n            this.props.deleteBurger(this.props.index);\n          }}\n        >\n          Удалить из меню\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditBurgerForm;\n"]},"metadata":{},"sourceType":"module"}